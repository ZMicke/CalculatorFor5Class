using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorFor5thClass.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    //Деление столбиком(пояснение)
    public static string ExplainColumn(int numberInput, int targetBase)
    {
        StringBuilder move = new StringBuilder();
        List<string> divisiondRemainders = new List<string>();
        //Неконечный результат
        int indificator = numberInput;
        int remainder;

        while (indificator != 0)
        {
            remainder = indificator % targetBase;
            divisiondRemainders.Add($"{indificator} | {targetBase}");
            divisiondRemainders.Add($"--- {remainder}");
            indificator /= targetBase;
        }
        //Лево-право
        int offset = 0;
        for (int i = 0; i < divisiondRemainders.Count; i += 2)
        {
            move.AppendLine(new string(' ', offset) + divisiondRemainders[i]);
            if (i + 1 < divisiondRemainders.Count)
            {
                move.AppendLine(new string(' ', offset) + divisiondRemainders[i + 1]);
            }
            offset += 15; //Отступ
        }
        //Добавляем результат
        move.AppendLine(new string(' ', offset) + "<--- Идем справа налево!");
        move.Append(new string(' ', 1) + "Получаем:");
        move.Append(string.Join("", divisiondRemainders.Where((_, index) => index % 2 != 0).Reverse()));
        move.Append($" для системы счисления {targetBase}");

        return move.ToString();
    }
    }
}
